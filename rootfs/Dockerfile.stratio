# Copyright 2015 The Kubernetes Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

FROM qa.int.stratio.com/ingress-nginx/nginx:81c2afd975a6f9a9847184472286044d7d5296f6@sha256:a71ac64dd8cfd68341ba47dbdc4d8c2cb91325fce669875193ea0319118201b5

WORKDIR  /etc/nginx

RUN apk update \
  && apk upgrade \
  && apk add --no-cache \
  && apk upgrade curl --repository=https://dl-cdn.alpinelinux.org/alpine/v3.15/main \  
  && apk upgrade openssl --repository=https://dl-cdn.alpinelinux.org/alpine/v3.15/main \  
  && apk add make --repository=https://dl-cdn.alpinelinux.org/alpine/v3.14/main \
    diffutils make unzip \
  && apk upgrade libxml2 \
  && rm -rf /var/cache/apk/*

# JWT manipulation dependencies
ENV LUAROCKS_VERSION 3.8.0
ENV LUAROCKS_SHA ab6612ca9ab87c6984871d2712d05525775e8b50172701a0a1cabddf76de2be7

RUN wget -O /tmp/luarocks.tgz \
  https://github.com/luarocks/luarocks/archive/v${LUAROCKS_VERSION}.tar.gz \
  && echo "${LUAROCKS_SHA} */tmp/luarocks.tgz" | sha256sum -c - \
  && tar -C /tmp -xzf /tmp/luarocks.tgz \
  && cd /tmp/luarocks* \
  && ./configure \
  && make install

RUN  luarocks install lua-resty-jwt
# End manipulation dependencies

#COPY --chown=www-data:www-data rootfs/etc /etc
#COPY --chown=www-data:www-data rootfs/ingress-controller /ingress-controller

COPY rootfs/etc /etc
RUN chown -R www-data:www-data /etc/nginx
#COPY rootfs/ingress-controller /ingress-controller
#RUN chown -R www-data:www-data /ingress-controller

#COPY --chown=www-data:www-data dist/dbg /
#COPY --chown=www-data:www-data dist/nginx-ingress-controller /
#COPY --chown=www-data:www-data dist/wait-shutdown /

COPY dist/dbg /
RUN chown -R www-data:www-data /dbg
COPY dist/nginx-ingress-controller /
RUN chown -R www-data:www-data /nginx-ingress-controller
COPY dist/wait-shutdown /
RUN chown -R www-data:www-data /wait-shutdown

# Fix permission during the build to avoid issues at runtime
# with volumes (custom templates)
RUN bash -xeu -c ' \
  writeDirs=( \
    /etc/ingress-controller \
    /etc/ingress-controller/ssl \
    /etc/ingress-controller/auth \
    /var/log \
    /var/log/nginx \
    /tmp/nginx \
  ); \
  for dir in "${writeDirs[@]}"; do \
    mkdir -p ${dir}; \
    chown -R www-data.www-data ${dir}; \
  done'

RUN apk add --no-cache libcap \
  && setcap    cap_net_bind_service=+ep /nginx-ingress-controller \
  && setcap -v cap_net_bind_service=+ep /nginx-ingress-controller \
  && setcap    cap_net_bind_service=+ep /usr/local/nginx/sbin/nginx \
  && setcap -v cap_net_bind_service=+ep /usr/local/nginx/sbin/nginx \
  && setcap    cap_net_bind_service=+ep /usr/bin/dumb-init \
  && setcap -v cap_net_bind_service=+ep /usr/bin/dumb-init \
  && apk del libcap \
  && ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx


USER www-data

# Create symlinks to redirect nginx logs to stdout and stderr docker log collector
RUN  ln -sf /dev/stdout /var/log/nginx/access.log \
  && ln -sf /dev/stderr /var/log/nginx/error.log

ENTRYPOINT ["/usr/bin/dumb-init", "--"]

CMD ["/nginx-ingress-controller"]
